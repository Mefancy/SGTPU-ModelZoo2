name: "SqueezeNet"
input: "data"
input_shape {
  dim: 1
  dim: 3
  dim: 400
  dim: 711
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "relu_conv1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "fire2/squeeze1x1"
  type: "Convolution"
  bottom: "pool1"
  top: "fire2/squeeze1x1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 16
    kernel_size: 1
  }
}
layer {
  name: "fire2/relu_squeeze1x1"
  type: "ReLU"
  bottom: "fire2/squeeze1x1"
  top: "fire2/squeeze1x1"
}
layer {
  name: "fire2/expand1x1"
  type: "Convolution"
  bottom: "fire2/squeeze1x1"
  top: "fire2/expand1x1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 64
    kernel_size: 1
  }
}
layer {
  name: "fire2/relu_expand1x1"
  type: "ReLU"
  bottom: "fire2/expand1x1"
  top: "fire2/expand1x1"
}
layer {
  name: "fire2/expand3x3"
  type: "Convolution"
  bottom: "fire2/squeeze1x1"
  top: "fire2/expand3x3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "fire2/relu_expand3x3"
  type: "ReLU"
  bottom: "fire2/expand3x3"
  top: "fire2/expand3x3"
}
layer {
  name: "fire2/concat"
  type: "Concat"
  bottom: "fire2/expand1x1"
  bottom: "fire2/expand3x3"
  top: "fire2/concat"
}
layer {
  name: "fire3/squeeze1x1"
  type: "Convolution"
  bottom: "fire2/concat"
  top: "fire3/squeeze1x1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 16
    kernel_size: 1
  }
}
layer {
  name: "fire3/relu_squeeze1x1"
  type: "ReLU"
  bottom: "fire3/squeeze1x1"
  top: "fire3/squeeze1x1"
}
layer {
  name: "fire3/expand1x1"
  type: "Convolution"
  bottom: "fire3/squeeze1x1"
  top: "fire3/expand1x1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 64
    kernel_size: 1
  }
}
layer {
  name: "fire3/relu_expand1x1"
  type: "ReLU"
  bottom: "fire3/expand1x1"
  top: "fire3/expand1x1"
}
layer {
  name: "fire3/expand3x3"
  type: "Convolution"
  bottom: "fire3/squeeze1x1"
  top: "fire3/expand3x3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "fire3/relu_expand3x3"
  type: "ReLU"
  bottom: "fire3/expand3x3"
  top: "fire3/expand3x3"
}
layer {
  name: "fire3/concat"
  type: "Concat"
  bottom: "fire3/expand1x1"
  bottom: "fire3/expand3x3"
  top: "fire3/concat"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "fire3/concat"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "fire4/squeeze1x1"
  type: "Convolution"
  bottom: "pool3"
  top: "fire4/squeeze1x1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 32
    kernel_size: 1
  }
}
layer {
  name: "fire4/relu_squeeze1x1"
  type: "ReLU"
  bottom: "fire4/squeeze1x1"
  top: "fire4/squeeze1x1"
}
layer {
  name: "fire4/expand1x1"
  type: "Convolution"
  bottom: "fire4/squeeze1x1"
  top: "fire4/expand1x1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 128
    kernel_size: 1
  }
}
layer {
  name: "fire4/relu_expand1x1"
  type: "ReLU"
  bottom: "fire4/expand1x1"
  top: "fire4/expand1x1"
}
layer {
  name: "fire4/expand3x3"
  type: "Convolution"
  bottom: "fire4/squeeze1x1"
  top: "fire4/expand3x3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "fire4/relu_expand3x3"
  type: "ReLU"
  bottom: "fire4/expand3x3"
  top: "fire4/expand3x3"
}
layer {
  name: "fire4/concat"
  type: "Concat"
  bottom: "fire4/expand1x1"
  bottom: "fire4/expand3x3"
  top: "fire4/concat"
}
layer {
  name: "fire5/squeeze1x1"
  type: "Convolution"
  bottom: "fire4/concat"
  top: "fire5/squeeze1x1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 32
    kernel_size: 1
  }
}
layer {
  name: "fire5/relu_squeeze1x1"
  type: "ReLU"
  bottom: "fire5/squeeze1x1"
  top: "fire5/squeeze1x1"
}
layer {
  name: "fire5/expand1x1"
  type: "Convolution"
  bottom: "fire5/squeeze1x1"
  top: "fire5/expand1x1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 128
    kernel_size: 1
  }
}
layer {
  name: "fire5/relu_expand1x1"
  type: "ReLU"
  bottom: "fire5/expand1x1"
  top: "fire5/expand1x1"
}
layer {
  name: "fire5/expand3x3"
  type: "Convolution"
  bottom: "fire5/squeeze1x1"
  top: "fire5/expand3x3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "fire5/relu_expand3x3"
  type: "ReLU"
  bottom: "fire5/expand3x3"
  top: "fire5/expand3x3"
}
layer {
  name: "fire5/concat"
  type: "Concat"
  bottom: "fire5/expand1x1"
  bottom: "fire5/expand3x3"
  top: "fire5/concat"
}
layer {
  name: "pool5"
  type: "Pooling"
  bottom: "fire5/concat"
  top: "pool5"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "fire6/squeeze1x1"
  type: "Convolution"
  bottom: "pool5"
  top: "fire6/squeeze1x1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 48
    kernel_size: 1
  }
}
layer {
  name: "fire6/relu_squeeze1x1"
  type: "ReLU"
  bottom: "fire6/squeeze1x1"
  top: "fire6/squeeze1x1"
}
layer {
  name: "fire6/expand1x1"
  type: "Convolution"
  bottom: "fire6/squeeze1x1"
  top: "fire6/expand1x1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 192
    kernel_size: 1
  }
}
layer {
  name: "fire6/relu_expand1x1"
  type: "ReLU"
  bottom: "fire6/expand1x1"
  top: "fire6/expand1x1"
}
layer {
  name: "fire6/expand3x3"
  type: "Convolution"
  bottom: "fire6/squeeze1x1"
  top: "fire6/expand3x3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 192
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "fire6/relu_expand3x3"
  type: "ReLU"
  bottom: "fire6/expand3x3"
  top: "fire6/expand3x3"
}
layer {
  name: "fire6/concat"
  type: "Concat"
  bottom: "fire6/expand1x1"
  bottom: "fire6/expand3x3"
  top: "fire6/concat"
}
layer {
  name: "fire7/squeeze1x1"
  type: "Convolution"
  bottom: "fire6/concat"
  top: "fire7/squeeze1x1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 48
    kernel_size: 1
  }
}
layer {
  name: "fire7/relu_squeeze1x1"
  type: "ReLU"
  bottom: "fire7/squeeze1x1"
  top: "fire7/squeeze1x1"
}
layer {
  name: "fire7/expand1x1"
  type: "Convolution"
  bottom: "fire7/squeeze1x1"
  top: "fire7/expand1x1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 192
    kernel_size: 1
  }
}
layer {
  name: "fire7/relu_expand1x1"
  type: "ReLU"
  bottom: "fire7/expand1x1"
  top: "fire7/expand1x1"
}
layer {
  name: "fire7/expand3x3"
  type: "Convolution"
  bottom: "fire7/squeeze1x1"
  top: "fire7/expand3x3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 192
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "fire7/relu_expand3x3"
  type: "ReLU"
  bottom: "fire7/expand3x3"
  top: "fire7/expand3x3"
}
layer {
  name: "fire7/concat"
  type: "Concat"
  bottom: "fire7/expand1x1"
  bottom: "fire7/expand3x3"
  top: "fire7/concat"
}
layer {
  name: "fire8/squeeze1x1"
  type: "Convolution"
  bottom: "fire7/concat"
  top: "fire8/squeeze1x1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 64
    kernel_size: 1
  }
}
layer {
  name: "fire8/relu_squeeze1x1"
  type: "ReLU"
  bottom: "fire8/squeeze1x1"
  top: "fire8/squeeze1x1"
}
layer {
  name: "fire8/expand1x1"
  type: "Convolution"
  bottom: "fire8/squeeze1x1"
  top: "fire8/expand1x1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    kernel_size: 1
  }
}
layer {
  name: "fire8/relu_expand1x1"
  type: "ReLU"
  bottom: "fire8/expand1x1"
  top: "fire8/expand1x1"
}
layer {
  name: "fire8/expand3x3"
  type: "Convolution"
  bottom: "fire8/squeeze1x1"
  top: "fire8/expand3x3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "fire8/relu_expand3x3"
  type: "ReLU"
  bottom: "fire8/expand3x3"
  top: "fire8/expand3x3"
}
layer {
  name: "fire8/concat"
  type: "Concat"
  bottom: "fire8/expand1x1"
  bottom: "fire8/expand3x3"
  top: "fire8/concat"
}
layer {
  name: "fire9/squeeze1x1"
  type: "Convolution"
  bottom: "fire8/concat"
  top: "fire9/squeeze1x1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 64
    kernel_size: 1
  }
}
layer {
  name: "fire9/relu_squeeze1x1"
  type: "ReLU"
  bottom: "fire9/squeeze1x1"
  top: "fire9/squeeze1x1"
}
layer {
  name: "fire9/expand1x1"
  type: "Convolution"
  bottom: "fire9/squeeze1x1"
  top: "fire9/expand1x1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    kernel_size: 1
  }
}
layer {
  name: "fire9/relu_expand1x1"
  type: "ReLU"
  bottom: "fire9/expand1x1"
  top: "fire9/expand1x1"
}
layer {
  name: "fire9/expand3x3"
  type: "Convolution"
  bottom: "fire9/squeeze1x1"
  top: "fire9/expand3x3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "fire9/relu_expand3x3"
  type: "ReLU"
  bottom: "fire9/expand3x3"
  top: "fire9/expand3x3"
}
layer {
  name: "fire9/concat"
  type: "Concat"
  bottom: "fire9/expand1x1"
  bottom: "fire9/expand3x3"
  top: "fire9/concat"
}
#==========CONV4 Backwards for M1======
# reduce conv5_3 channels
layer {
  name: "conv5_128"
  type: "Convolution"
  bottom: "fire9/concat"
  top: "conv5_128"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 128
    pad: 0
    kernel_size: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}
layer {
  name: "conv5_128_relu"
  type: "ReLU"
  bottom: "conv5_128"
  top: "conv5_128"
}

# Upsample conv5_3
layer {
  name: "conv5_128_up"
  type: "Deconvolution"
  bottom: "conv5_128"
  top: "conv5_128_up"
  convolution_param {
    kernel_size: 4
    stride: 2
    num_output: 128
    group: 128
    pad: 0
    weight_filler: { type: "bilinear" }
    bias_term: false
  }
  param { lr_mult: 0 decay_mult: 0 }
}



layer {
  name: "conv4_128"
  type: "Convolution"
  bottom: "fire5/concat"
  top: "conv4_128"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 128
    pad: 0
    kernel_size: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}

layer {
  name: "conv4_128_relu"
  type: "ReLU"
  bottom: "conv4_128"
  top: "conv4_128"
}

# Crop conv5_3
layer {
  name: "conv5_128_crop"
  type: "Crop"
  bottom: "conv5_128_up"
  bottom: "conv4_128"
  top: "conv5_128_crop"
  crop_param {
    axis: 2
    offset: 0
  }
}

# Eltwise summation
layer {
  name: "conv4_fuse"
  type: "Eltwise"
  bottom: "conv5_128_crop"
  bottom: "conv4_128"
  top: "conv4_fuse"
  eltwise_param {
    operation: SUM
  }
}
# Perform final 3x3 convolution
layer {
  name: "conv4_fuse_final"
  type: "Convolution"
  bottom: "conv4_fuse"
  top: "conv4_fuse_final"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}
layer {
  name: "conv4_fuse_final_relu"
  type: "ReLU"
  bottom: "conv4_fuse_final"
  top: "conv4_fuse_final"
}

layer {
  name: "pool6"
  type: "Pooling"
  bottom: "fire9/concat"
  top: "pool6"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}

#========== M3@SSH =========

layer {
  name: "m3@ssh_3x3"
  type: "Convolution"
  bottom: "pool6"
  top: "m3@ssh_3x3_output"
  param { lr_mult: 1.0 decay_mult: 1.0 name:'m3@ssh_3x3_param1'}
  param { lr_mult: 2.0 decay_mult: 0 name:'m3@ssh_3x3_param2'}
  convolution_param {
    num_output: 256
    kernel_size: 3 pad: 1 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}
# Dim red
layer {
  name: "m3@ssh_dimred"
  type: "Convolution"
  bottom: "pool6"
  top: "m3@ssh_dimred_output"
  param { lr_mult: 1.0 decay_mult: 1.0 name: 'm3@ssh_dimred_param1' }
  param { lr_mult: 2.0 decay_mult: 0 name: 'm3@ssh_dimred_param2'}
  convolution_param {
    num_output: 128
    kernel_size: 3 pad: 1 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}
layer {
  name: "m3@ssh_dimred_relu"
  type: "ReLU"
  bottom: "m3@ssh_dimred_output"
  top: "m3@ssh_dimred_output"
}
# 5x5
layer {
  name: "m3@ssh_5x5"
  type: "Convolution"
  bottom: "m3@ssh_dimred_output"
  top: "m3@ssh_5x5_output"
  param { lr_mult: 1.0 decay_mult: 1.0 name: 'm3@ssh_5x5_param1'}
  param { lr_mult: 2.0 decay_mult: 0 name: 'm3@ssh_5x5_param2'}
  convolution_param {
    num_output: 128
    kernel_size: 3 pad: 1 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}
#7x7
layer {
  name: "m3@ssh_7x7-1"
  type: "Convolution"
  bottom: "m3@ssh_dimred_output"
  top: "m3@ssh_7x7-1_output"
  param { lr_mult: 1.0 decay_mult: 1.0 name: 'm3@ssh_7x7-1_param1'}
  param { lr_mult: 2.0 decay_mult: 0 name: 'm3@ssh_7x7-1_param2'}
  convolution_param {
    num_output: 128
    kernel_size: 3 pad: 1 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}
layer {
  name: "m3@ssh_7x7-1_relu"
  type: "ReLU"
  bottom: "m3@ssh_7x7-1_output"
  top: "m3@ssh_7x7-1_output"
}

layer {
  name: "m3@ssh_7x7"
  type: "Convolution"
  bottom: "m3@ssh_7x7-1_output"
  top: "m3@ssh_7x7_output"
  param { lr_mult: 1.0 decay_mult: 1.0 name: 'm3@ssh_7x7_param1'}
  param { lr_mult: 2.0 decay_mult: 0 name: 'm3@ssh_7x7_param2'}
  convolution_param {
    num_output: 128
    kernel_size: 3 pad: 1 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}

layer{
  name: "m3@ssh_output"
  type: "Concat"
  bottom: "m3@ssh_3x3_output"
  bottom: "m3@ssh_5x5_output"
  bottom: "m3@ssh_7x7_output"
  top: "m3@ssh_output"
  concat_param{
      axis: 1
  }
}

layer {
  name: "m3@ssh_output_relu"
  type: "ReLU"
  bottom: "m3@ssh_output"
  top: "m3@ssh_output"
}
layer {
  name: "m3@ssh_cls_score"
  type: "Convolution"
  bottom: "m3@ssh_output"
  top: "m3@ssh_cls_score_output"
  param { lr_mult: 1.0 decay_mult: 1.0 name: 'm3@ssh_cls_score_param1'}
  param { lr_mult: 2.0 decay_mult: 0 name: 'm3@ssh_cls_score_param2'}
  convolution_param {
    num_output: 4   # 2(bg/fg) * 21(anchors)
    kernel_size: 1 pad: 0 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}
layer {
  name: "m3@ssh_bbox_pred"
  type: "Convolution"
  bottom: "m3@ssh_output"
  top: "m3@ssh_bbox_pred_output"
  param { lr_mult: 1.0 decay_mult: 1.0}
  param { lr_mult: 2.0 decay_mult: 0}
  convolution_param {
    num_output: 8   # 4 * 21(anchors)
    kernel_size: 1 pad: 0 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}
layer {
   bottom: "m3@ssh_cls_score_output"
   top: "m3@ssh_cls_score_reshape_output"
   name: "m3@ssh_cls_reshape"
   type: "Reshape"
   reshape_param { shape { dim: 0 dim: 2 dim: -1 dim: 0 } }
}


layer {
  name: "m3@ssh_cls_prob"
  type: "Softmax"
  bottom: "m3@ssh_cls_score_reshape_output"
  top: "m3@ssh_cls_prob_output"
}
layer {
  name: 'm3@ssh_cls_prob_reshape'
  type: 'Reshape'
  bottom: 'm3@ssh_cls_prob_output'
  top: 'm3@ssh_cls_prob_reshape_output'
  reshape_param { shape { dim: 0 dim:4  dim: -1 dim: 0 } }
}

#========== M2@SSH =========

layer {
  name: "m2@ssh_3x3"
  type: "Convolution"
  bottom: "fire9/concat"
  top: "m2@ssh_3x3_output"
  param { lr_mult: 1.0 decay_mult: 1.0 name: "m2@ssh_3x3_param1"}
  param { lr_mult: 2.0 decay_mult: 0 name: "m2@ssh_3x3_param2"}
  convolution_param {
    num_output: 256
    kernel_size: 3 pad: 1 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}
# Dim red
layer {
  name: "m2@ssh_dimred"
  type: "Convolution"
  bottom: "fire9/concat"
  top: "m2@ssh_dimred_output"
  param { lr_mult: 1.0 decay_mult: 1.0 name: "m2@ssh_dimred_param1"}
  param { lr_mult: 2.0 decay_mult: 0 name: "m2@ssh_dimred_param2"}
  convolution_param {
    num_output: 128
    kernel_size: 3 pad: 1 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}
layer {
  name: "m2@ssh_dimred_relu"
  type: "ReLU"
  bottom: "m2@ssh_dimred_output"
  top: "m2@ssh_dimred_output"
}
# 5x5
layer {
  name: "m2@ssh_5x5"
  type: "Convolution"
  bottom: "m2@ssh_dimred_output"
  top: "m2@ssh_5x5_output"
  param { lr_mult: 1.0 decay_mult: 1.0 name: "m2@ssh_5x5_param1"}
  param { lr_mult: 2.0 decay_mult: 0 name: "m2@ssh_5x5_param2"}
  convolution_param {
    num_output: 128
    kernel_size: 3 pad: 1 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}
#7x7
layer {
  name: "m2@ssh_7x7-1"
  type: "Convolution"
  bottom: "m2@ssh_dimred_output"
  top: "m2@ssh_7x7-1_output"
  param { lr_mult: 1.0 decay_mult: 1.0 name: "m2@ssh_7x7-1_param1"}
  param { lr_mult: 2.0 decay_mult: 0 name: "m2@ssh_7x7-1_param2"}
  convolution_param {
    num_output: 128
    kernel_size: 3 pad: 1 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}
layer {
  name: "m2@ssh_7x7-1_relu"
  type: "ReLU"
  bottom: "m2@ssh_7x7-1_output"
  top: "m2@ssh_7x7-1_output"
}

layer {
  name: "m2@ssh_7x7"
  type: "Convolution"
  bottom: "m2@ssh_7x7-1_output"
  top: "m2@ssh_7x7_output"
  param { lr_mult: 1.0 decay_mult: 1.0 name: "m2@ssh_7x7_param1"}
  param { lr_mult: 2.0 decay_mult: 0 name: "m2@ssh_7x7_param2"}
  convolution_param {
    num_output: 128
    kernel_size: 3 pad: 1 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}

layer{
  name: "m2@ssh_output"
  type: "Concat"
  bottom: "m2@ssh_3x3_output"
  bottom: "m2@ssh_5x5_output"
  bottom: "m2@ssh_7x7_output"
  top: "m2@ssh_output"
  concat_param{
      axis: 1
  }
}

layer {
  name: "m2@ssh_output_relu"
  type: "ReLU"
  bottom: "m2@ssh_output"
  top: "m2@ssh_output"
}
layer {
  name: "m2@ssh_cls_score"
  type: "Convolution"
  bottom: "m2@ssh_output"
  top: "m2@ssh_cls_score_output"
  param { lr_mult: 1.0 decay_mult: 1.0 name: "m2@ssh_cls_score_param1"}
  param { lr_mult: 2.0 decay_mult: 0 name: "m2@ssh_cls_score_param2"}
  convolution_param {
    num_output: 4   # 2(bg/fg) * 21(anchors)
    kernel_size: 1 pad: 0 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}
layer {
  name: "m2@ssh_bbox_pred"
  type: "Convolution"
  bottom: "m2@ssh_output"
  top: "m2@ssh_bbox_pred_output"
  param { lr_mult: 1.0 decay_mult: 1.0 }
  param { lr_mult: 2.0 decay_mult: 0 }
  convolution_param {
    num_output: 8   # 4 * 21(anchors)
    kernel_size: 1 pad: 0 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}
layer {
   bottom: "m2@ssh_cls_score_output"
   top: "m2@ssh_cls_score_reshape_output"
   name: "m2@ssh_cls_reshape"
   type: "Reshape"
   reshape_param { shape { dim: 0 dim: 2 dim: -1 dim: 0 } }
}


layer {
  name: "m2@ssh_cls_prob"
  type: "Softmax"
  bottom: "m2@ssh_cls_score_reshape_output"
  top: "m2@ssh_cls_prob_output"
}
layer {
  name: 'm2@ssh_cls_prob_reshape'
  type: 'Reshape'
  bottom: 'm2@ssh_cls_prob_output'
  top: 'm2@ssh_cls_prob_reshape_output'
  reshape_param { shape { dim: 0 dim:4  dim: -1 dim: 0 } }
}

#========== M1@SSH =========

layer {
  name: "m1@ssh_3x3"
  type: "Convolution"
  bottom: "conv4_fuse_final"
  top: "m1@ssh_3x3_output"
  param { lr_mult: 1.0 decay_mult: 1.0 name: "m1@ssh_3x3_param1"}
  param { lr_mult: 2.0 decay_mult: 0 name: "m1@ssh_3x3_param2"}
  convolution_param {
    num_output: 128
    kernel_size: 3 pad: 1 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}
# Dim red
layer {
  name: "m1@ssh_dimred"
  type: "Convolution"
  bottom: "conv4_fuse_final"
  top: "m1@ssh_dimred_output"
  param { lr_mult: 1.0 decay_mult: 1.0 name: "m1@ssh_dimred_param1"}
  param { lr_mult: 2.0 decay_mult: 0 name: "m1@ssh_dimred_param2"}
  convolution_param {
    num_output: 64
    kernel_size: 3 pad: 1 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}
layer {
  name: "m1@ssh_dimred_relu"
  type: "ReLU"
  bottom: "m1@ssh_dimred_output"
  top: "m1@ssh_dimred_output"
}
# 5x5
layer {
  name: "m1@ssh_5x5"
  type: "Convolution"
  bottom: "m1@ssh_dimred_output"
  top: "m1@ssh_5x5_output"
  param { lr_mult: 1.0 decay_mult: 1.0 name: "m1@ssh_5x5_param1"}
  param { lr_mult: 2.0 decay_mult: 0 name: "m1@ssh_5x5_param2"}
  convolution_param {
    num_output: 64
    kernel_size: 3 pad: 1 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}
#7x7
layer {
  name: "m1@ssh_7x7-1"
  type: "Convolution"
  bottom: "m1@ssh_dimred_output"
  top: "m1@ssh_7x7-1_output"
  param { lr_mult: 1.0 decay_mult: 1.0 name: "m1@ssh_7x7-1_param1"}
  param { lr_mult: 2.0 decay_mult: 0 name: "m1@ssh_7x7-1_param2"}
  convolution_param {
    num_output: 64
    kernel_size: 3 pad: 1 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}
layer {
  name: "m1@ssh_7x7-1_relu"
  type: "ReLU"
  bottom: "m1@ssh_7x7-1_output"
  top: "m1@ssh_7x7-1_output"
}

layer {
  name: "m1@ssh_7x7"
  type: "Convolution"
  bottom: "m1@ssh_7x7-1_output"
  top: "m1@ssh_7x7_output"
  param { lr_mult: 1.0 decay_mult: 1.0 name: "m1@ssh_7x7_param1"}
  param { lr_mult: 2.0 decay_mult: 0 name: "m1@ssh_7x7_param2"}
  convolution_param {
    num_output: 64
    kernel_size: 3 pad: 1 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}

layer{
  name: "m1@ssh_output"
  type: "Concat"
  bottom: "m1@ssh_3x3_output"
  bottom: "m1@ssh_5x5_output"
  bottom: "m1@ssh_7x7_output"
  top: "m1@ssh_output"
  concat_param{
      axis: 1
  }
}
layer {
  name: "m1@ssh_output_relu"
  type: "ReLU"
  bottom: "m1@ssh_output"
  top: "m1@ssh_output"
}
layer {
  name: "m1@ssh_cls_score"
  type: "Convolution"
  bottom: "m1@ssh_output"
  top: "m1@ssh_cls_score_output"
  param { lr_mult: 1.0 decay_mult: 1.0 name: "m1@ssh_cls_score_param1"}
  param { lr_mult: 2.0 decay_mult: 0 name: "m1@ssh_cls_score_param2"}
  convolution_param {
    num_output: 4   # 2(bg/fg) * 21(anchors)
    kernel_size: 1 pad: 0 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}
layer {
  name: "m1@ssh_bbox_pred"
  type: "Convolution"
  bottom: "m1@ssh_output"
  top: "m1@ssh_bbox_pred_output"
  param { lr_mult: 1.0 decay_mult: 1.0 }
  param { lr_mult: 2.0 decay_mult: 0 }
  convolution_param {
    num_output: 8   # 4 * 21(anchors)
    kernel_size: 1 pad: 0 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}
layer {
   bottom: "m1@ssh_cls_score_output"
   top: "m1@ssh_cls_score_reshape_output"
   name: "m1@ssh_cls_reshape"
   type: "Reshape"
   reshape_param { shape { dim: 0 dim: 2 dim: -1 dim: 0 } }
}


layer {
  name: "m1@ssh_cls_prob"
  type: "Softmax"
  bottom: "m1@ssh_cls_score_reshape_output"
  top: "m1@ssh_cls_prob_output"
}
layer {
  name: 'm1@ssh_cls_prob_reshape'
  type: 'Reshape'
  bottom: 'm1@ssh_cls_prob_output'
  top: 'm1@ssh_cls_prob_reshape_output'
  reshape_param { shape { dim: 0 dim:4  dim: -1 dim: 0 } }
}

